// This file is auto-generated by @hey-api/openapi-ts

/**
 * Value object for an attribute. This represents a product or product variant meta field.
 */
export type AttributeValue = {
    /**
     * The key associated with the product or product variant meta field.
     */
    key?: string;
    /**
     * The value associated with the product or product variant meta field.
     */
    value?: string;
    /**
     * The namespace associated with metafields for [products](/docs/rest-catalog/products/metafields) and [product variants](/docs/rest-catalog/product-variants/metafields). Save the metafield namespace using the format `shipping_carrier_{yourCarrierId}`; otherwise, it will not be recognized as a valid attribute.
     */
    namespace?: string;
    /**
     * Resource type associated with the product or product variant meta field. Currently, the only values available are 'product' or 'variant'.
     */
    resource_type?: 'product' | 'variant';
    /**
     * The resource ID of the product or product variant meta field.
     */
    resource_id?: string;
    /**
     * Attribute type associated with the product or product variant meta field. Currently, the only value for this is 'metafield'.
     */
    attribute_type?: 'metafield';
};

/**
 * Resource type associated with the product or product variant meta field. Currently, the only values available are 'product' or 'variant'.
 */
export type resource_type = 'product' | 'variant';

/**
 * Attribute type associated with the product or product variant meta field. Currently, the only value for this is 'metafield'.
 */
export type attribute_type = 'metafield';

/**
 * The minimum required payload that is sent to retrieve rates.
 */
export type BaseOptions = {
    /**
     * Object representing a destination or origin address for items.
     */
    origin: {
        street_1?: string;
        street_2?: string;
        zip: string;
        city?: string;
        /**
         * State in ISO_3166 2 format.
         */
        state_iso2?: string;
        /**
         * Country in ISO_3166 2 format.
         */
        country_iso2: string;
        /**
         * Optional. Defaults to `RESIDENTIAL`.
         */
        address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
    };
    /**
     * Object representing a destination or origin address for items.
     */
    destination: {
        street_1?: string;
        street_2?: string;
        zip: string;
        city?: string;
        /**
         * State in ISO_3166 2 format
         */
        state_iso2?: string;
        /**
         * Country in ISO_3166 2 format
         */
        country_iso2: string;
        /**
         * Defaults to residential. Optional.
         */
        address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
        /**
         * Describes one or more [custom form fields](/docs/rest-storefront/forms). Property key is the global ID of a shipping address form field. When no custom fields exist, the object is empty.
         */
        form_fields?: {
            '<form field global ID>'?: FormFieldValue;
        };
    };
    items: Array<{
        /**
         * The variant SKU.
         */
        sku?: string;
        variant_id?: string;
        product_id?: string;
        name?: string;
        /**
         * Value object for a length measurement.
         */
        length?: {
            units: 'cm' | 'in';
            value: number;
        };
        /**
         * Value object for a length measurement.
         */
        width?: {
            units: 'cm' | 'in';
            value: number;
        };
        /**
         * Value object for a length measurement.
         */
        height?: {
            units: 'cm' | 'in';
            value: number;
        };
        /**
         * Value object for a weight measurement.
         */
        weight?: {
            units: 'oz' | 'g';
            value: number;
        };
        /**
         * Value object for a money amount.
         */
        discounted_price?: {
            currency: string;
            amount: number;
        };
        /**
         * Value object for a money amount.
         */
        declared_value?: {
            currency: string;
            amount: number;
        };
        quantity?: number;
        /**
         * A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration.
         */
        attributes?: Array<{
            /**
             * The key associated with the meta field.
             */
            key?: string;
            /**
             * The value associated with the meta field.
             */
            value?: string;
            /**
             * The namespace associated with a [product](/docs/rest-catalog/products/metafields) or [product variant](/docs/rest-catalog/product-variants/metafields) metafields. You should save a metafield namespace under this format `shipping_carrier_{yourCarrierId}`; otherwise, you will not be able to recognize it as an attribute.
             */
            namespace?: string;
            /**
             * Resource type associated with the meta field. Currently, the only values available are 'product' or 'variant'.
             */
            resource_type?: 'product' | 'variant';
            /**
             * The resource ID of the meta field.
             */
            resource_id?: string;
            /**
             * Attribute type associated with the product or product variant meta field. Currently, the only value for this is 'metafield'.
             */
            attribute_type?: 'metafield';
        }>;
    }>;
    /**
     * The details of the Customer that has made the purchase.
     */
    customer?: {
        customer_groups?: Array<{
            customer_group_id?: number;
            customer_group_name?: string;
        }>;
        customer_id?: number;
    };
    store_id: string;
    /**
     * A collection of Reference Value objects.
     */
    request_context?: {
        reference_values?: Array<{
            /**
             * The property to which the reference value pertains. Examples include `channel_id` and `cart_id`.
             */
            name?: string;
            value?: string;
        }>;
    };
};

/**
 * Optional. Defaults to `RESIDENTIAL`.
 */
export type address_type = 'RESIDENTIAL' | 'COMMERCIAL';

/**
 * Payload sent to a Shipping Provider in to get quotes.
 */
export type BaseOptionsSchema = {
    /**
     * The minimum required payload that is sent to retrieve rates.
     */
    base_options: {
        /**
         * Object representing a destination or origin address for items.
         */
        origin: {
            street_1?: string;
            street_2?: string;
            zip: string;
            city?: string;
            /**
             * State in ISO_3166 2 format.
             */
            state_iso2?: string;
            /**
             * Country in ISO_3166 2 format.
             */
            country_iso2: string;
            /**
             * Optional. Defaults to `RESIDENTIAL`.
             */
            address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
        };
        /**
         * Object representing a destination or origin address for items.
         */
        destination: {
            street_1?: string;
            street_2?: string;
            zip: string;
            city?: string;
            /**
             * State in ISO_3166 2 format.
             */
            state_iso2?: string;
            /**
             * Country in ISO_3166 2 format.
             */
            country_iso2: string;
            /**
             * Optional. Defaults to `RESIDENTIAL`.
             */
            address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
        };
        items: Array<{
            /**
             * The variant SKU.
             */
            sku?: string;
            variant_id?: string;
            product_id?: string;
            name?: string;
            /**
             * Value object for a length measurement.
             */
            length?: {
                units: 'cm' | 'in';
                value: number;
            };
            /**
             * Value object for a width measurement.
             */
            width?: {
                units: 'cm' | 'in';
                value: number;
            };
            /**
             * Value object for a height measurement.
             */
            height?: {
                units: 'cm' | 'in';
                value: number;
            };
            /**
             * Value object for a weight measurement.
             */
            weight?: {
                units: 'oz' | 'g';
                value: number;
            };
            /**
             * Value object for a money amount.
             */
            discounted_price?: {
                currency: string;
                amount: number;
            };
            /**
             * Value object for a money amount.
             */
            declared_value?: {
                currency: string;
                amount: number;
            };
            quantity?: number;
            /**
             * A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of public fields specific to the carrier integration.
             */
            attributes?: Array<{
                /**
                 * The key associated with the meta field.
                 */
                key?: string;
                /**
                 * The value associated with the meta field.
                 */
                value?: string;
                /**
                 * The namespace associated with metafields for [products](/docs/rest-catalog/products/metafields#create-a-product-metafield) and [product variants](/docs/rest-catalog/product-variants/metafields). Save the metafield namespace using the format `shipping_carrier_{yourCarrierId}`; otherwise, it will not be recognized as a valid attribute.
                 */
                namespace?: string;
                /**
                 * The resource type associated with the metafield. Currently, the only values available are `product` and `variant`.
                 */
                resource_type?: 'product' | 'variant';
                /**
                 * The resource ID of the meta field.
                 */
                resource_id?: string;
                /**
                 * The attribute type associated with the product or product variant metafield. Currently, the only value available is `metafield`.
                 */
                attribute_type?: 'metafield';
            }>;
        }>;
        /**
         * The details of the Customer that has made the purchase.
         */
        customer?: {
            customer_groups?: Array<{
                customer_group_id?: number;
                customer_group_name?: string;
            }>;
            customer_id?: number;
        };
        store_id: string;
        /**
         * A collection of Reference Value objects.
         */
        request_context?: {
            reference_values?: Array<{
                name?: string;
                value?: string;
            }>;
        };
    };
    zone_options?: ZoneOptionsInstance;
    connection_options?: ConnectionOptionsInstance;
};

/**
 * A grouping of carrier rates and optionally, info about that carrier.
 */
export type CarrierQuoteObject = {
    carrier_info?: {
        code: string;
        display_name: string;
    };
    quotes: Array<{
        /**
         * A code describing the service.
         */
        code: string;
        /**
         * A display name for the service.
         */
        display_name: string;
        /**
         * Value object for a money amount.
         */
        cost: {
            currency: string;
            amount: number;
        };
        messages?: Array<{
            text: string;
            type: 'INFO' | 'WARNING' | 'ERROR';
        }>;
        description?: string;
        rate_id?: string;
        /**
         * Value object for a money amount. Optional field; merchants may request features.
         */
        discounted_cost?: {
            currency: string;
            amount: number;
        };
        /**
         * Date at which carrier dispatches to the shipping destination. Optional field; merchants may request features.
         */
        dispatch_date?: string;
        /**
         * Value object for the length of time in transit.
         */
        transit_time?: {
            units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
            duration?: number;
        };
    }>;
};

/**
 * The payload sent to a Shipping Provider to check that the store is connected to this provider.
 *
 * Each Shipping Provider will have different configurations for the payload.
 */
export type CheckConnectionOptionsRequestPayload = {
    connection_options: ConnectionOptionsInstance;
};

/**
 * The response received back from the Shipping Provider connection check. This allows the store to understand whether the connection was successful.
 */
export type CheckConnectionOptionsResponsePayload = {
    /**
     * Indicates whether or not the connection options are valid.
     */
    valid?: boolean;
    messages?: Array<{
        text: string;
        type: 'INFO' | 'WARNING' | 'ERROR';
    }>;
};

/**
 * Any global request options declared by the carrier and configured by the merchant to retrieve rates. Optional.
 */
export type ConnectionOptionsInstance = {
    [key: string]: unknown;
};

/**
 * The details of the Customer that has made the purchase.
 */
export type CustomerDetails = {
    customer_groups?: Array<{
        customer_group_id?: number;
        customer_group_name?: string;
    }>;
    customer_id?: number;
};

/**
 * The Group (if any) that this customer is in. The value will default to zero if the customer is not in a group or is a guest.
 */
export type CustomerGroup = {
    customer_group_id?: number;
    customer_group_name?: string;
};

/**
 * Representation of a range of date objects.
 */
export type DateRange = {
    /**
     * Value Object representing a Date.
     */
    from?: {
        date?: string;
        timezone?: string;
    };
    /**
     * Value Object representing a Date.
     */
    to?: {
        date?: string;
        timezone?: string;
    };
};

/**
 * Value Object representing a Date.
 */
export type DateValue = {
    date?: string;
    timezone?: string;
};

/**
 * Value object for a length measurement.
 */
export type DimensionValue = {
    units: 'cm' | 'in';
    value: number;
};

export type units = 'cm' | 'in';

/**
 * The value of a [shipping address](/docs/rest-management/orders/order-shipping-addresses#get-a-shipping-address) form field. Depending on the form field, this could be a user-defined value or the value of a hidden input.
 */
export type FormFieldValue = string;

export type KeyValuePair = {
    key: string;
    value: string;
};

/**
 * Options, ranges, defaults, and validation for a carrier-defined field that displays at checkout.
 */
export type KeyValuePairSchema = {
    /**
     * The internal code that represents this input field.
     */
    code: string;
    /**
     * Display name for this input field.
     */
    label: string;
    /**
     * Longer description text to be displayed as a tooltip at checkout.
     */
    description?: string;
    /**
     * Placeholder for any validation we choose to implement.
     */
    validation?: string;
    /**
     * How this input will be displayed.
     */
    type: 'date' | 'string' | 'select' | 'code';
    /**
     * A valid default value for this field.
     */
    default_value: string;
    /**
     * The list of options available for `select` type fields.
     */
    value_options?: Array<(string)>;
    /**
     * For date type fields, a set of valid date ranges available to choose from
     */
    date_ranges?: Array<{
        /**
         * Value Object representing a Date.
         */
        from?: {
            date?: string;
            timezone?: string;
        };
        /**
         * Value Object representing a Date.
         */
        to?: {
            date?: string;
            timezone?: string;
        };
    }>;
};

/**
 * How this input will be displayed.
 */
export type type = 'date' | 'string' | 'select' | 'code';

/**
 * A simple string/type response for returning information.
 */
export type Message = {
    text: string;
    type: 'INFO' | 'WARNING' | 'ERROR';
};

export type type2 = 'INFO' | 'WARNING' | 'ERROR';

/**
 * Value object for a money amount.
 */
export type MoneyValue = {
    currency: string;
    amount: number;
};

/**
 * Optional, any checkout specific request options to retrieve rates
 */
export type RateOptionsInstance = Array<{
    key: string;
    value: string;
}>;

/**
 * A set of carrier-specific fields that will be displayed to shoppers at checkout.
 */
export type RateOptionsSchema = Array<{
    /**
     * The internal code that represents this input field.
     */
    code: string;
    /**
     * Display name for this input field.
     */
    label: string;
    /**
     * Longer description text to be displayed as a tooltip at checkout.
     */
    description?: string;
    /**
     * Placeholder for any validation we choose to implement.
     */
    validation?: string;
    /**
     * How this input will be displayed.
     */
    type: 'date' | 'string' | 'select' | 'code';
    /**
     * A valid default value for this field.
     */
    default_value: string;
    /**
     * The list of options available for `select` type fields.
     */
    value_options?: Array<(string)>;
    /**
     * The set of valid date ranges for `date` type fields.
     */
    date_ranges?: Array<{
        /**
         * Value Object representing a Date.
         */
        from?: {
            date?: string;
            timezone?: string;
        };
        /**
         * Value Object representing a Date.
         */
        to?: {
            date?: string;
            timezone?: string;
        };
    }>;
}>;

/**
 * A quote being returned as part of the rate request.
 */
export type RateQuoteObject = {
    /**
     * A code describing the service.
     */
    code: string;
    /**
     * A display name for the service.
     */
    display_name: string;
    /**
     * Value object for a money amount.
     */
    cost: {
        currency: string;
        amount: number;
    };
    messages?: Array<{
        text: string;
        type: 'INFO' | 'WARNING' | 'ERROR';
    }>;
    description?: string;
    rate_id?: string;
    /**
     * Value object for a money amount. Optional field; merchants may request features.
     */
    discounted_cost?: {
        currency: string;
        amount: number;
    };
    /**
     * Date at which carrier dispatches to the shipping destination. Optional field; merchants may request features.
     */
    dispatch_date?: string;
    /**
     * Value object for the length of time in transit.
     */
    transit_time?: {
        units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
        duration?: number;
    };
};

export type units2 = 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';

/**
 * A cart item along with its shipping-specific attributes.
 */
export type RateRequestItem = {
    /**
     * The variant SKU.
     */
    sku?: string;
    variant_id?: string;
    product_id?: string;
    name?: string;
    /**
     * Value object for a length measurement.
     */
    length?: {
        units: 'cm' | 'in';
        value: number;
    };
    /**
     * Value object for a width measurement.
     */
    width?: {
        units: 'cm' | 'in';
        value: number;
    };
    /**
     * Value object for a height measurement.
     */
    height?: {
        units: 'cm' | 'in';
        value: number;
    };
    /**
     * Value object for a weight measurement.
     */
    weight?: {
        units: 'oz' | 'g';
        value: number;
    };
    /**
     * Value object for a money amount.
     */
    discounted_price?: {
        currency: string;
        amount: number;
    };
    /**
     * Value object for a money amount.
     */
    declared_value?: {
        currency: string;
        amount: number;
    };
    quantity?: number;
    /**
     * A list of arbitrary properties stored as part of the product or product variant meta fields. These consist of any public fields specific to the carrier integration.
     */
    attributes?: Array<{
        /**
         * The key associated with the product or product variant meta field.
         */
        key?: string;
        /**
         * The value associated with the product or product variant meta field.
         */
        value?: string;
        /**
         * The namespace associated with metafields for [products](/docs/rest-catalog/products/metafields) and [product variants](/docs/rest-catalog/product-variants/metafields). Save the metafield namespace using the format `shipping_carrier_{yourCarrierId}`; otherwise, it will not be recognized as a valid attribute.
         */
        namespace?: string;
        /**
         * Resource type associated with the product or product variant meta field. Currently, the only values available are 'product' or 'variant'.
         */
        resource_type?: 'product' | 'variant';
        /**
         * The resource ID of the product or product variant meta field.
         */
        resource_id?: string;
        /**
         * Attribute type associated with the product or product variant meta field. Currently, the only value for this is 'metafield'.
         */
        attribute_type?: 'metafield';
    }>;
};

/**
 * Payload sent to a Shipping Provider to get quotes.
 */
export type RateRequestPayload = {
    base_options: BaseOptions;
    zone_options?: ZoneOptionsInstance;
    connection_options?: ConnectionOptionsInstance;
};

/**
 * The response from the Shipping Service. Contains zero or more quotes.
 */
export type RateResponsePayload = {
    quote_id: string;
    messages: Array<{
        text: string;
        type: 'INFO' | 'WARNING' | 'ERROR';
    }>;
    carrier_quotes: Array<{
        carrier_info?: {
            code: string;
            display_name: string;
        };
        quotes: Array<{
            /**
             * A code describing the service.
             */
            code: string;
            /**
             * A display name for the service.
             */
            display_name: string;
            /**
             * Value object for a money amount.
             */
            cost: {
                currency: string;
                amount: number;
            };
            messages?: Array<{
                text: string;
                type: 'INFO' | 'WARNING' | 'ERROR';
            }>;
            description?: string;
            rate_id?: string;
            /**
             * Value object for a money amount. Optional field; merchants may request features.
             */
            discounted_cost?: {
                currency: string;
                amount: number;
            };
            /**
             * Date at which carrier dispatches to the shipping destination. Optional field; merchants may request features.
             */
            dispatch_date?: string;
            /**
             * Value object for the length of time in transit.
             */
            transit_time?: {
                units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
                duration?: number;
            };
        }>;
    }>;
};

/**
 * Value objects contained within the request context.
 */
export type ReferenceValue = {
    name?: string;
    value?: string;
};

/**
 * A collection of Reference Value objects.
 */
export type RequestContext = {
    reference_values?: Array<{
        name?: string;
        value?: string;
    }>;
};

/**
 * Object representing a destination or origin address for items.
 */
export type ShippingAddress = {
    street_1?: string;
    street_2?: string;
    zip: string;
    city?: string;
    /**
     * State in ISO_3166 2 format.
     */
    state_iso2?: string;
    /**
     * Country in ISO_3166 2 format.
     */
    country_iso2: string;
    /**
     * Optional. Defaults to `RESIDENTIAL`.
     */
    address_type?: 'RESIDENTIAL' | 'COMMERCIAL';
};

/**
 * Value object for the length of time in transit.
 */
export type TransitTimeObject = {
    units?: 'BUSINESS_DAYS' | 'DAYS' | 'HOURS';
    duration?: number;
};

/**
 * Value object for a weight measurement.
 */
export type WeightValue = {
    units: 'oz' | 'g';
    value: number;
};

export type units3 = 'oz' | 'g';

/**
 * Any zone-specific request options declared by the carrier and configured by the merchant to retrieve rates. Optional.
 */
export type ZoneOptionsInstance = {
    [key: string]: unknown;
};

export type RequestShippingRatesData = {
    /**
     * Rate request object.
     */
    body: RateRequestPayload;
};

export type RequestShippingRatesResponse = (RateResponsePayload);

export type RequestShippingRatesError = unknown;

export type ValidateConnectionOptionsData = {
    /**
     * Check connection options request.
     */
    body: CheckConnectionOptionsRequestPayload;
};

export type ValidateConnectionOptionsResponse = (CheckConnectionOptionsResponsePayload);

export type ValidateConnectionOptionsError = unknown;