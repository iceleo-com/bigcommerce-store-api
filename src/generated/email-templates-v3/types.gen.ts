// This file is auto-generated by @hey-api/openapi-ts

/**
 * Error payload for the BigCommerce API.
 *
 */
export type BaseError = {
    /**
     * The HTTP status code.
     *
     */
    status?: number;
    /**
     * The error title describing the particular error.
     *
     */
    title?: string;
    type?: string;
    instance?: string;
};

export type DetailedErrors = {
    [key: string]: (string);
};

/**
 * Data for a particular email template
 */
export type EmailTemplate = {
    type_id?: 'abandoned_cart_email' | 'account_details_changed_email' | 'combined_order_status_email' | 'createaccount_email' | 'createguestaccount_email' | 'giftcertificate_email' | 'invoice_email' | 'ordermessage_notification' | 'return_confirmation_email' | 'return_statuschange_email' | 'product_review_email' | 'account_reset_password_email';
    body?: string;
    translations?: LocaleCollection;
    subject?: string;
};

export type type_id = 'abandoned_cart_email' | 'account_details_changed_email' | 'combined_order_status_email' | 'createaccount_email' | 'createguestaccount_email' | 'giftcertificate_email' | 'invoice_email' | 'ordermessage_notification' | 'return_confirmation_email' | 'return_statuschange_email' | 'product_review_email' | 'account_reset_password_email';

/**
 * A collection of all email templates.
 */
export type EmailTemplatesCollection = Array<EmailTemplate>;

/**
 * Data for updated template
 */
export type EmailTemplateUpdate = {
    body: string;
    translations?: LocaleCollection;
    subject: string;
};

export type ErrorResponse = BaseError & {
    errors?: DetailedErrors;
};

/**
 * A collection of locale translations for the static language.
 */
export type LocaleCollection = Array<LocaleObject>;

/**
 * A particular locale ºs translations.
 */
export type LocaleObject = {
    /**
     * Locale code for this language, such as "en", "en-us", "fr-ca".
     */
    locale?: string;
    /**
     * Language keys for the template. User-defined. Should match any lang keys used in the template.
     */
    keys?: {
        [key: string]: unknown;
    };
};

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
 */
export type ParameterAccept = string;

/**
 * Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only.
 */
export type ParameterChannelIdParam = number;

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
 */
export type ParameterContentType = string;

/**
 * Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.
 */
export type ParameterRequiredChannelIdParamForDelete = number;

export type scratch = {
    id?: string;
};

export type GetEmailTemplatesData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query?: {
        /**
         * Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only.
         */
        channel_id?: number;
    };
};

export type GetEmailTemplatesResponse = ({
    data?: EmailTemplatesCollection;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type GetEmailTemplatesError = unknown;

export type GetEmailTemplateData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    path: {
        'template-name': string;
    };
    query?: {
        /**
         * Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only.
         */
        channel_id?: number;
    };
};

export type GetEmailTemplateResponse = ({
    data?: EmailTemplate;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type GetEmailTemplateError = unknown;

export type UpdateEmailTemplateData = {
    body?: EmailTemplate;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
    path: {
        'template-name': string;
    };
    query?: {
        /**
         * Channel ID to use for channel-specific settings. If omitted, you will interact with the global setting only.
         */
        channel_id?: number;
    };
};

export type UpdateEmailTemplateResponse = ({
    data?: EmailTemplate;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type UpdateEmailTemplateError = (ErrorResponse);

export type DeleteEmailTemplateOverrideData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    path: {
        'template-name': string;
    };
    query: {
        /**
         * Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.
         */
        channel_id: number;
    };
};

export type DeleteEmailTemplateOverrideResponse = (unknown);

export type DeleteEmailTemplateOverrideError = unknown;