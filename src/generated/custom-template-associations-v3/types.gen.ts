// This file is auto-generated by @hey-api/openapi-ts

/**
 * Error payload for the BigCommerce API.
 *
 */
export type BaseError = {
    /**
     * The HTTP status code.
     *
     */
    status?: number;
    /**
     * The error title describing the particular error.
     *
     */
    title?: string;
    type?: string;
    instance?: string;
};

export type CustomTemplateAssociation = {
    id?: number;
    channel_id?: number;
    entity_type?: 'product' | 'category' | 'brand' | 'page';
    entity_id?: number;
    file_name?: string;
    /**
     * An invalid file name does not match with an existing custom layout file in the currently active theme for the channel. When an association is invalid the store will fallback to using the default for that entity type.
     */
    is_valid?: boolean;
    date_created?: string;
    date_modified?: string;
};

export type entity_type = 'product' | 'category' | 'brand' | 'page';

export type CustomTemplateAssociationUpsert = {
    channel_id: number;
    entity_type: 'product' | 'category' | 'brand' | 'page';
    entity_id: number;
    file_name: string;
};

export type DetailedErrors = {
    [key: string]: (string);
};

export type Error = {
    status?: number;
    message?: string;
};

export type ErrorResponse = BaseError & {
    errors?: DetailedErrors;
};

export type ErrorResponse400 = {
    schema?: Error;
};

export type ErrorResponse404 = {
    schema?: Error;
};

export type ErrorResponse409 = {
    schema?: Error;
};

export type ErrorResponse422 = {
    schema?: Error;
};

export type MetaPaginationObject = {
    pagination?: {
        total?: number;
        count?: number;
        per_page?: number;
        current_page?: number;
        total_pages?: number;
        links?: {
            next?: string;
            current?: string;
        };
    };
};

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
 */
export type ParameterAccept = string;

/**
 * Return results or act upon only template associations in the specified channel.
 */
export type ParameterChannelIdQuery = number;

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
 */
export type ParameterContentType = string;

/**
 * A comma-separated list of entity IDs to return or act upon. Must be used together with the `type` filter. Currently, all supported entities have integer-type IDs.
 */
export type ParameterEntityIdInQuery = Array<(number)>;

/**
 * A comma-separated string that specifies a list of association IDs to delete.
 */
export type ParameterIdInQuery = Array<(number)>;

/**
 * Optional toggle to filter for exclusively valid or invalid associations entries. An invalid entry is one where its file name does not match up to an existing custom layout file in the currently active theme for the channel.
 */
export type ParameterIsValidQuery = boolean;

/**
 * Number of results to return per page.
 */
export type ParameterLimitQuery = number;

/**
 * Which page number to return, based on the limit value. Used to paginate large collections.
 */
export type ParameterPageQuery = number;

/**
 * Filter associations by type.
 */
export type ParameterTypeQuery = 'product' | 'category' | 'brand' | 'page';

export type GetCustomTemplateAssociationsData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query?: {
        /**
         * Return results or act upon only template associations in the specified channel.
         */
        channel_id?: number;
        /**
         * A comma-separated list of entity IDs to return or act upon. Must be used together with the `type` filter. Currently, all supported entities have integer-type IDs.
         */
        'entity_id:in'?: Array<(number)>;
        /**
         * Optional toggle to filter for exclusively valid or invalid associations entries. An invalid entry is one where its file name does not match up to an existing custom layout file in the currently active theme for the channel.
         */
        is_valid?: boolean;
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * Which page number to return, based on the limit value. Used to paginate large collections.
         */
        page?: number;
        /**
         * Filter associations by type.
         */
        type?: 'product' | 'category' | 'brand' | 'page';
    };
};

export type GetCustomTemplateAssociationsResponse = ({
    data?: Array<CustomTemplateAssociation>;
    meta?: MetaPaginationObject;
});

export type GetCustomTemplateAssociationsError = unknown;

export type UpsertCustomTemplateAssociationsData = {
    body?: Array<CustomTemplateAssociationUpsert>;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
};

export type UpsertCustomTemplateAssociationsResponse = ({
    [key: string]: unknown;
});

export type UpsertCustomTemplateAssociationsError = (ErrorResponse);

export type DeleteCustomTemplateAssociationsData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query?: {
        /**
         * Return results or act upon only template associations in the specified channel.
         */
        channel_id?: number;
        /**
         * A comma-separated list of entity IDs to return or act upon. Must be used together with the `type` filter. Currently, all supported entities have integer-type IDs.
         */
        'entity_id:in'?: Array<(number)>;
        /**
         * A comma-separated string that specifies a list of association IDs to delete.
         */
        'id:in'?: Array<(number)>;
        /**
         * Filter associations by type.
         */
        type?: 'product' | 'category' | 'brand' | 'page';
    };
};

export type DeleteCustomTemplateAssociationsResponse = (void);

export type DeleteCustomTemplateAssociationsError = unknown;