// This file is auto-generated by @hey-api/openapi-ts

export type metaCollection = {
    pagination?: pagination;
};

/**
 * Data about the response, including pagination and collection totals.
 */
export type pagination = {
    /**
     * Total number of items in the result set.
     */
    total?: number;
    /**
     * Total number of items in the collection response.
     */
    count?: number;
    /**
     * The amount of items returned in the collection per page, controlled by the limit parameter.
     */
    per_page?: number;
    /**
     * The page you are currently on within the collection.
     */
    current_page?: number;
    /**
     * The total number of pages in the collection.
     */
    total_pages?: number;
};

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
 */
export type ParameterAccept = string;

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
 */
export type ParameterContentType = string;

/**
 * All wishlists relating to the customer.
 */
export type ParameterCustomerIdQuery = number;

export type ParameterItemIdPath = number;

/**
 * The number of items to return per page. Default is 50 and maximum is 250.
 */
export type ParameterLimitQuery = number;

/**
 * The page number of results to return. 1 is the default and starts from record 0. Use in conjunction with the limit query parameter to request a specific set of records.
 */
export type ParameterPageQuery = number;

/**
 * ID of the Wishlist.
 */
export type ParameterWishlistIdPath = number;

export type wishlist_Full = {
    /**
     * Wishlist ID, provided after creating a wishlist with a POST.
     */
    id?: number;
    /**
     * The ID the customer to which the wishlist belongs.
     */
    customer_id?: number;
    /**
     * The name of the wishlist.
     */
    name?: string;
    /**
     * Whether the wishlist is available to the public.
     */
    is_public?: boolean;
    /**
     * The token of the wishlist. This is created internally within BigCommerce. The wishlist ID is to be used for external apps. Read-Only.
     */
    token?: string;
    /**
     * Array of wishlist items.
     */
    items?: Array<wishlistItem_Full>;
};

export type wishlist_Post = {
    /**
     * The customer id.
     */
    customer_id: number;
    /**
     * Whether the wishlist is available to the public.
     */
    is_public?: boolean;
    /**
     * The title of the wishlist.
     */
    name?: string;
    /**
     * Array of wishlist items.
     */
    items?: Array<{
        /**
         * The ID of the product.
         */
        product_id?: number;
        /**
         * The variant ID of the product.
         */
        variant_id?: number;
    }>;
};

export type wishlist_Put = {
    /**
     * The customer ID. A read-only value.
     */
    customer_id: number;
    /**
     * Whether the wishlist is available to the public.
     */
    is_public?: boolean;
    /**
     * The title of the wishlist.
     */
    name?: string;
    /**
     * Array of wishlist items.
     */
    items: Array<{
        /**
         * The ID of the item.
         */
        id?: number;
        /**
         * The ID of the product.
         */
        product_id?: number;
        /**
         * The variant ID of the product.
         */
        variant_id?: number;
    }>;
};

export type wishlistItem_Full = {
    /**
     * The ID of the item.
     */
    id?: number;
    /**
     * The ID of the product.
     */
    product_id?: number;
    /**
     * The variant ID of the product.
     */
    variant_id?: number;
};

export type wishlistItem_Post = {
    items?: Array<{
        product_id?: number;
        variant_id?: number;
    }>;
};

export type GetWishlistsData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query?: {
        /**
         * All wishlists relating to the customer.
         */
        customer_id?: number;
        /**
         * The number of items to return per page. Default is 50 and maximum is 250.
         */
        limit?: number;
        /**
         * The page number of results to return. 1 is the default and starts from record 0. Use in conjunction with the limit query parameter to request a specific set of records.
         */
        page?: number;
    };
};

export type GetWishlistsResponse = ({
    data?: Array<wishlist_Full>;
    meta?: metaCollection;
});

export type GetWishlistsError = ({
    status?: number;
    title?: string;
    type?: string;
});

export type CreateWishlistData = {
    body: wishlist_Post;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
};

export type CreateWishlistResponse = ({
    data?: wishlist_Full;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type CreateWishlistError = ({
    status?: number;
    title?: string;
    type?: string;
});

export type DeleteWishlistItemData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    path: {
        item_id: number;
        /**
         * ID of the Wishlist.
         */
        wishlist_id: number;
    };
};

export type DeleteWishlistItemResponse = ({
    data?: wishlist_Full;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type DeleteWishlistItemError = ({
    status?: number;
    title?: string;
    type?: string;
} | {
    [key: string]: unknown;
});

export type GetWishlistData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    path: {
        /**
         * ID of the Wishlist.
         */
        wishlist_id: number;
    };
};

export type GetWishlistResponse = ({
    data?: wishlist_Full;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type GetWishlistError = ({
    status?: number;
    title?: string;
    type?: string;
} | {
    [key: string]: unknown;
});

export type UpdateWishlistData = {
    body: wishlist_Put;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
    path: {
        /**
         * ID of the Wishlist.
         */
        wishlist_id: number;
    };
};

export type UpdateWishlistResponse = ({
    data?: wishlist_Full;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type UpdateWishlistError = ({
    status?: number;
    title?: string;
    type?: string;
});

export type DeleteWishlistData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    path: {
        /**
         * ID of the Wishlist.
         */
        wishlist_id: number;
    };
};

export type DeleteWishlistResponse = (void);

export type DeleteWishlistError = ({
    status?: number;
    title?: string;
    type?: string;
});

export type AddWishlistItemData = {
    body?: wishlistItem_Post;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
    path: {
        /**
         * ID of the Wishlist.
         */
        wishlist_id: number;
    };
};

export type AddWishlistItemResponse = ({
    data?: wishlist_Full;
    /**
     * Response metadata.
     */
    meta?: {
        [key: string]: unknown;
    };
});

export type AddWishlistItemError = ({
    status?: number;
    title?: string;
    type?: string;
} | unknown);