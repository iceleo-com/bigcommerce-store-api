// This file is auto-generated by @hey-api/openapi-ts

export type BasePickupMethod = {
    /**
     * The ID of the location.
     */
    location_id?: number;
    /**
     * Title of the pickup method.
     */
    display_name?: string;
    /**
     * Instructions for picking up items.
     */
    collection_instructions?: string;
    /**
     * The description of collection time.
     */
    collection_time_description?: string;
    /**
     * @deprecated
     */
    location_identity?: number;
};

export type MetaCollection = {
    pagination?: {
        /**
         * Total number of items in the result set.
         */
        total?: number;
        /**
         * The total number of items in the collection on the current page.
         */
        count?: number;
        /**
         * The amount of items returned in the collection per page, controlled by the limit parameter.
         */
        per_page?: number;
        /**
         * The page you are currently on within the collection.
         */
        current_page?: number;
        /**
         * The total number of pages in the collection.
         */
        total_pages?: number;
        /**
         * Pagination links for the previous and next parts of the whole collection.
         */
        links?: {
            /**
             * A link to the previous page is returned in the response.
             */
            previous?: string;
            /**
             * A link to the current page is returned in the response.
             */
            current?: string;
            /**
             * A link to the next page is returned in the response.
             */
            next?: string;
        };
    };
};

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
 */
export type ParameterAccept = string;

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
 */
export type ParameterContentType = string;

export type PickupMethodResponse = {
    /**
     * The ID of the pickup method.
     */
    id?: number;
} & BasePickupMethod & {
    /**
     * Filter pickup methods by time created.
     *
     * Time is presented in ISO-8601 format.
     */
    date_created?: string;
    /**
     * Filter pickup methods by time modified.
     *
     * Time is presented in ISO-8601 format.
     */
    date_modified?: string;
};

export type GetPickupMethodsData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query?: {
        /**
         * Filter pickup methods by the date created. Return methods created on the provided date.
         *
         * For example, `date_created=2023-09-07T06:23:13Z`.
         */
        date_created?: string;
        /**
         * Filter pickup methods by maximum date created. Return methods created before the provided date.
         *
         * For example, `date_created:max=2023-09-07T06:23:13Z`.
         */
        'date_created:max'?: string;
        /**
         * Filter pickup methods by minimum date created. Return methods created after the provided date.
         *
         * For example, `date_created:min=2023-09-07T06:23:13Z`.
         */
        'date_created:min'?: string;
        /**
         * Filter pickup methods by date modified. Return methods modified on the provided date.
         *
         * For example, `date_modified=2023-09-07T06:23:13Z`.
         */
        date_modified?: string;
        /**
         * Filter pickup methods by maximum date modified. Return methods modified before the provided date.
         *
         * For example, `date_modified:max=2023-09-07T06:23:13Z`.
         */
        'date_modified:max'?: string;
        /**
         * Filter pickup methods by minimum date modified. Return methods modified after the provided date.
         *
         * For example, `date_modified:min=2023-09-07T06:23:13Z`.
         */
        'date_modified:min'?: string;
        /**
         * Comma separated list of pickup method IDs.
         */
        'id:in'?: number;
        /**
         * Maximum number of results per page.
         */
        limit?: number;
        /**
         * The number of the page to be fetched.
         */
        page?: number;
        /**
         * Sort pickup methods by date_modified:* or name:* ; for example, `sort=name:asc`.
         *
         * - `date_modified:asc` - sort by date modified in ascending order
         * - `date_modified:desc` - sort by date modified in descending order
         * - `name:asc` - sort by name in ascending order
         * - `name:desc` - sort by name in descending order
         */
        sort?: 'date_modified:asc' | 'date_modified:desc' | 'name:asc' | 'name:desc';
    };
};

export type GetPickupMethodsResponse = ({
    data?: Array<PickupMethodResponse>;
    meta?: MetaCollection;
});

export type GetPickupMethodsError = unknown;

export type PostPickupMethodsData = {
    body: Array<BasePickupMethod>;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
};

export type PostPickupMethodsResponse = ({
    data?: Array<PickupMethodResponse>;
    meta?: {
        [key: string]: unknown;
    };
});

export type PostPickupMethodsError = unknown;

export type PutPickupMethodsData = {
    body: Array<({
    /**
     * The ID of the pickup method.
     */
    id?: number;
} & BasePickupMethod)>;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
};

export type PutPickupMethodsResponse = ({
    data?: Array<PickupMethodResponse>;
    meta?: {
        [key: string]: unknown;
    };
});

export type PutPickupMethodsError = unknown;

export type DeletePickupMethodsData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query: {
        /**
         * Comma separated list of pickup method IDs.
         */
        'id:in': number;
    };
};

export type DeletePickupMethodsResponse = (void);

export type DeletePickupMethodsError = unknown;