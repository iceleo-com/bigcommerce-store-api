// This file is auto-generated by @hey-api/openapi-ts

/**
 * Data about the customs information object.
 */
export type customsInformation = {
    /**
     * The ID of the product which the customs information data will apply to.
     */
    product_id?: number;
    /**
     * The country of manufacture, production, or growth represented in ISO 3166-1 alpha-2 format.
     */
    country_of_origin?: string;
    /**
     * Description that provides information for customs to identify and verify shapes physical characteristics and packaging of each shipment.
     */
    commodity_description?: string;
    /**
     * Flag to determine whether this product will be shipped internationally.
     */
    international_shipping?: boolean;
    hs_codes?: harmonizedSystemCodes;
    /**
     * Date and time when the customs information was created.
     */
    readonly created_at?: string;
    /**
     * Date and time when the customs information was last updated.
     */
    readonly updated_at?: string;
};

/**
 * Data about the customs information object.
 */
export type customsInformation_request = {
    /**
     * The product ID to which the customs information data applies.
     */
    product_id: number;
    /**
     * The country of manufacture, production, or growth represented in ISO 3166-1 alpha-2 format.
     */
    country_of_origin: string;
    /**
     * Description that provides information for customs to identify and verify the shapes, physical characteristics, and packaging of each shipment.
     */
    commodity_description: string;
    /**
     * Flag to determine whether this product will be shipped internationally.
     */
    international_shipping: boolean;
    hs_codes: harmonizedSystemCodes;
};

export type error_Full = {
    [key: string]: unknown;
};

/**
 * Key-value pairs that are commonly used in the following form:
 *
 * `countryISO2: '/^[0-9A-Za-z]{6,14}$/'`
 *
 * This key-value pair represents a country and the associated `hs_code` that applies to that country.
 *
 * You can also use the `ALL` key in place of an ISO2 key to specify that the `hs_code` applies to all countries. The `ALL` key can be combined with other countries in the `hs_code` object.
 */
export type harmonizedSystemCodes = {
    [key: string]: unknown;
};

/**
 * Meta data relating to pagination.
 */
export type metaCollection = {
    pagination?: {
        /**
         * Total number of items returned.
         */
        total?: number;
        /**
         * Number of items returned on per page.
         */
        count?: number;
        /**
         * Number of items to be displayed per page.
         */
        per_page?: number;
        /**
         * Current page number.
         */
        current_page?: number;
        /**
         * Total number of pages.
         */
        total_page?: number;
        links?: {
            /**
             * Query string appended to the resource to return to the previous page.
             */
            previous?: string;
            /**
             * Query string appended to the resource to proceed to the next page.
             */
            next?: string;
            /**
             * Query string appended to the resource to show the current page.
             */
            current?: string;
        };
    };
};

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
 */
export type ParameterAccept = string;

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
 */
export type ParameterContentType = string;

/**
 * Permanent ID of the BigCommerce store.
 */
export type Parameterstore_hash = string;

export type shippingSettings = {
    checkout?: {
        /**
         * The approach for displaying the list of countries at checkout.
         */
        country_list_strategy?: 'DISPLAY_ALL_COUNTRIES' | 'DISPLAY_ONLY_SHIPPABLE_COUNTRIES';
    };
};

/**
 * The approach for displaying the list of countries at checkout.
 */
export type country_list_strategy = 'DISPLAY_ALL_COUNTRIES' | 'DISPLAY_ONLY_SHIPPABLE_COUNTRIES';

export type GetCustomsInformationData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query?: {
        limit?: number;
        page?: number;
        /**
         * A comma-separated list of product IDs. For more information, see [Filtering](/docs/start/about/common-query-params).
         */
        'product_id:in'?: Array<(number)>;
    };
};

export type GetCustomsInformationResponse = ({
    data?: Array<customsInformation>;
    meta?: metaCollection;
});

export type GetCustomsInformationError = unknown;

export type DeleteCustomsInformationData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
    query: {
        'product_id:in': Array<(number)>;
    };
};

export type DeleteCustomsInformationResponse = (void);

export type DeleteCustomsInformationError = unknown;

export type UpdateCustomsInformationData = {
    body?: Array<customsInformation_request>;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
};

export type UpdateCustomsInformationResponse = ({
    data?: Array<customsInformation>;
});

export type UpdateCustomsInformationError = unknown;

export type GetShippingSettingsData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
};

export type GetShippingSettingsResponse = ({
    data?: shippingSettings;
    meta?: {
        [key: string]: unknown;
    };
});

export type GetShippingSettingsError = unknown;

export type UpdateShippingSettingsData = {
    body?: shippingSettings;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
};

export type UpdateShippingSettingsResponse = ({
    data?: shippingSettings;
    meta?: {
        [key: string]: unknown;
    };
});

export type UpdateShippingSettingsError = unknown;