// This file is auto-generated by @hey-api/openapi-ts

export type count_Full = {
    count?: number;
};

/**
 * Refers to the state returned in `GET` states requests.
 */
export type countriesState_Full = {
    /**
     * Numeric ID of the state/province.
     */
    id?: number;
    /**
     * Name of the state/province.
     */
    state?: string;
    /**
     * Abbreviation for the state/province.
     */
    state_abbreviation?: string;
    /**
     * Numeric ID of the state’s/province’s associated country.
     */
    country_id?: number;
};

/**
 * Refers to the `states` object return in `GET` countries requests.
 */
export type countriesStates_Full = {
    url?: string;
    resource?: string;
};

export type country_Base = {
    /**
     * Country name.
     */
    country?: string;
    /**
     * 2-letter country code.
     */
    country_iso2?: string;
    /**
     * 3-letter country code.
     */
    country_iso3?: string;
};

export type country_Full = {
    /**
     * Id of the country.
     */
    id?: number;
} & country_Base & {
    states?: countriesStates_Full;
};

export type GetCountriesData = {
    headers: {
        Accept: string;
        'Content-Type': string;
    };
    query?: {
        country?: string;
        country_iso2?: string;
        country_iso3?: string;
        /**
         * Count per page.
         */
        limit?: number;
        /**
         * Number of pages.
         */
        page?: number;
    };
};

export type GetCountriesResponse = (Array<country_Full>);

export type GetCountriesError = unknown;

export type GetCountryData = {
    headers: {
        Accept: string;
        'Content-Type': string;
    };
    path: {
        /**
         * The ID of the country.
         */
        id: number;
    };
};

export type GetCountryResponse = (country_Full);

export type GetCountryError = unknown;

export type GetCountryStatesData = {
    headers: {
        Accept: string;
        'Content-Type': string;
    };
    path: {
        /**
         * Id of the country
         */
        country_id: number;
    };
    query?: {
        /**
         * Count per page.
         */
        limit?: number;
        /**
         * Number of pages.
         */
        page?: number;
        /**
         * Name of the state/province.
         */
        state?: string;
        /**
         * Abbreviation for the state/province.
         */
        state_abbreviation?: string;
    };
};

export type GetCountryStatesResponse = (Array<countriesState_Full>);

export type GetCountryStatesError = unknown;

export type GetCountryStateData = {
    headers: {
        Accept: string;
        'Content-Type': string;
    };
    path: {
        /**
         * Id of the country
         */
        country_id: number;
        /**
         * Id of the states
         */
        id: number;
    };
};

export type GetCountryStateResponse = (countriesState_Full);

export type GetCountryStateError = unknown;

export type GetCountriesCountResponse = (count_Full);

export type GetCountriesCountError = unknown;

export type GetStatesCountResponse = (count_Full);

export type GetStatesCountError = unknown;

export type GetStatesData = {
    query?: {
        /**
         * The number of results to return per request.
         */
        limit?: number;
        /**
         * The ordered grouping of results to return.
         */
        page?: number;
    };
};

export type GetStatesResponse = (Array<countriesState_Full>);

export type GetStatesError = unknown;

export type GetCountryStatesCountData = {
    path: {
        country_id: number;
    };
};

export type GetCountryStatesCountResponse = (count_Full);

export type GetCountryStatesCountError = unknown;