// This file is auto-generated by @hey-api/openapi-ts

/**
 * Error payload for the BigCommerce API.
 *
 */
export type BaseError = {
    /**
     * The HTTP status code.
     *
     */
    status?: number;
    /**
     * The error title describing the particular error.
     *
     */
    title?: string;
};

export type betaErrorResponse400 = BaseError & {
    error?: {
        message?: string;
    };
};

export type betaErrorResponse403 = BaseError & {
    error?: {
        message?: string;
    };
};

export type betaErrorResponse422 = BaseError & {
    errors?: Array<{
        /**
         * The field that caused the validation error.
         */
        field?: string;
        /**
         * A specific error message describing the issue.
         */
        message?: string;
    }>;
};

export type ErrorResponse400 = {
    schema?: betaErrorResponse400;
};

export type ErrorResponse403 = {
    schema?: betaErrorResponse403;
};

export type ErrorResponse422 = {
    schema?: betaErrorResponse422;
};

export type GlobalPromotionSettings = {
    /**
     * - When the property is set to "true", promotions will apply for products with custom pricing.
     * - When the property is set to "false", promotions will not apply for products with custom pricing.
     * - Note: This field can only be edited for Enterprise Accounts.
     */
    promotions_apply_on_products_with_custom_product_price: boolean;
    /**
     * - When the property is set to "true", promotions will be triggered by zero price products.
     * - When the property is set to "false", promotions will not be triggered by zero price products.
     * - Note: This field can only be edited for Enterprise Accounts.
     */
    promotions_triggered_by_products_with_zero_product_price: boolean;
    /**
     * Specifies the number of coupons allowed at checkout on a single order.
     * - Note: This field can only be edited for Enterprise Accounts.
     */
    number_of_coupons_allowed_at_checkout: number;
    /**
     * - When the property is set to "true", promotions in a cart are calculated independently, each applied to the original price of the included products.
     * - When the property is set to "false", promotions in a cart are calculated cumulatively, applied to the order sub-total based on your promotion order.
     */
    promotions_applied_on_original_product_price: boolean;
};

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
 */
export type ParameterAccept = string;

/**
 * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
 */
export type ParameterContentType = string;

export type GetGlobalPromotionSettingsData = {
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
    };
};

export type GetGlobalPromotionSettingsResponse = (GlobalPromotionSettings);

export type GetGlobalPromotionSettingsError = (ErrorResponse400);

export type UpdateGlobalPromotionSettingsData = {
    body: GlobalPromotionSettings;
    headers: {
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the response body.
         */
        Accept: string;
        /**
         * The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the request body.
         */
        'Content-Type': string;
    };
};

export type UpdateGlobalPromotionSettingsResponse = ((GlobalPromotionSettings));

export type UpdateGlobalPromotionSettingsError = (ErrorResponse400 | ErrorResponse422);