import RequestService from '../helpers/request/request-service';
import * as CheckoutsV3ApiSpecs from '../generated/checkouts-v3';
export default class CheckoutsV3Api {
    private readonly request;
    constructor(request: RequestService);
    getCheckout(checkoutId: CheckoutsV3ApiSpecs.GetCheckoutData['path']['checkoutId'], query?: CheckoutsV3ApiSpecs.GetCheckoutData['query']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.GetCheckoutResponse, CheckoutsV3ApiSpecs.GetCheckoutError>>;
    updateCheckout(checkoutId: CheckoutsV3ApiSpecs.UpdateCheckoutData['path']['checkoutId'], requestBody: CheckoutsV3ApiSpecs.UpdateCheckoutData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.UpdateCheckoutResponse, CheckoutsV3ApiSpecs.UpdateCheckoutError>>;
    addCheckoutDiscount(requestBody: CheckoutsV3ApiSpecs.AddCheckoutDiscountData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.AddCheckoutDiscountResponse, CheckoutsV3ApiSpecs.AddCheckoutDiscountError>>;
    addCheckoutBillingAddress(requestBody: CheckoutsV3ApiSpecs.AddCheckoutBillingAddressData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.AddCheckoutBillingAddressResponse, CheckoutsV3ApiSpecs.AddCheckoutBillingAddressError>>;
    updateCheckoutBillingAddress(requestBody: CheckoutsV3ApiSpecs.UpdateCheckoutBillingAddressData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.UpdateCheckoutBillingAddressResponse, CheckoutsV3ApiSpecs.UpdateCheckoutBillingAddressError>>;
    addCheckoutConsignment(requestBody: CheckoutsV3ApiSpecs.AddCheckoutConsignmentData['body'], query?: CheckoutsV3ApiSpecs.AddCheckoutConsignmentData['query']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.AddCheckoutConsignmentResponse, CheckoutsV3ApiSpecs.AddCheckoutConsignmentError>>;
    updateCheckoutConsignment(checkoutId: CheckoutsV3ApiSpecs.UpdateCheckoutConsignmentData['path']['checkoutId'], consignmentId: CheckoutsV3ApiSpecs.UpdateCheckoutConsignmentData['path']['consignmentId'], requestBody: CheckoutsV3ApiSpecs.UpdateCheckoutConsignmentData['body'], query?: CheckoutsV3ApiSpecs.UpdateCheckoutConsignmentData['query']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.UpdateCheckoutConsignmentResponse, CheckoutsV3ApiSpecs.UpdateCheckoutConsignmentError>>;
    deleteCheckoutConsignment(checkoutId: CheckoutsV3ApiSpecs.DeleteCheckoutConsignmentData['path']['checkoutId'], consignmentId: CheckoutsV3ApiSpecs.DeleteCheckoutConsignmentData['path']['consignmentId'], requestBody: CheckoutsV3ApiSpecs.DeleteCheckoutConsignmentData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.DeleteCheckoutConsignmentResponse, any>>;
    addCheckoutCoupon(requestBody: CheckoutsV3ApiSpecs.AddCheckoutCouponData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.AddCheckoutCouponResponse, CheckoutsV3ApiSpecs.AddCheckoutCouponError>>;
    deleteCheckoutCoupon(requestBody: CheckoutsV3ApiSpecs.DeleteCheckoutCouponData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.DeleteCheckoutCouponResponse, CheckoutsV3ApiSpecs.DeleteCheckoutCouponError>>;
    checkoutsFeesByCheckoutIdPost(requestBody: CheckoutsV3ApiSpecs.CheckoutsFeesByCheckoutIdPostData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.CheckoutsFeesByCheckoutIdPostResponse, any>>;
    checkoutsFeesByCheckoutIdPut(requestBody: CheckoutsV3ApiSpecs.CheckoutsFeesByCheckoutIdPutData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.CheckoutsFeesByCheckoutIdPutResponse, any>>;
    checkoutsFeesByCheckoutIdDelete(requestBody: CheckoutsV3ApiSpecs.CheckoutsFeesByCheckoutIdDeleteData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.CheckoutsFeesByCheckoutIdDeleteResponse, any>>;
    createOrder(): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.CreateOrderResponse, any>>;
    getCheckoutSettings(): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.GetCheckoutSettingsResponse, any>>;
    updateCheckoutSettings(requestBody: CheckoutsV3ApiSpecs.UpdateCheckoutSettingsData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.UpdateCheckoutSettingsResponse, any>>;
    createCheckoutToken(checkoutId: CheckoutsV3ApiSpecs.CreateCheckoutTokenData['path']['checkoutId'], requestBody: CheckoutsV3ApiSpecs.CreateCheckoutTokenData['body']): Promise<import("../helpers/request/request-service.types").RequestResponse<CheckoutsV3ApiSpecs.CreateCheckoutTokenResponse, CheckoutsV3ApiSpecs.CreateCheckoutTokenError>>;
}
