import RequestService from '../helpers/request/request-service';
import * as ProductVariantOptionsV3ApiSpecs from '../generated/product-variant-options-v3';
export default class ProductVariantOptionsV3Api {
    private readonly request;
    constructor(request: RequestService);
    getProductVariantOptions(productId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionsData['path']['product_id'], query?: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionsData['query']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionsResponse, ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionsError>>;
    createProductVariantOption(productId: ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionData['path']['product_id'], requestBody: ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionData['body']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionResponse, ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionError>>;
    getProductVariantOption(productId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionData['path']['option_id'], query?: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionData['query']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionResponse, ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionError>>;
    updateProductVariantOption(productId: ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionData['path']['option_id'], requestBody: ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionData['body']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionResponse, ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionError>>;
    deleteProductVariantOption(productId: ProductVariantOptionsV3ApiSpecs.DeleteProductVariantOptionData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.DeleteProductVariantOptionData['path']['option_id']): Promise<import("../helpers/request/request-service.type").RequestResponse<any, any>>;
    getProductVariantOptionValues(productId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValuesData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValuesData['path']['option_id'], query?: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValuesData['query']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValuesResponse, any>>;
    createProductVariantOptionValue(productId: ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionValueData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionValueData['path']['option_id'], requestBody: ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionValueData['body']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionValueResponse, ProductVariantOptionsV3ApiSpecs.CreateProductVariantOptionValueError>>;
    getProductVariantOptionValue(productId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValueData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValueData['path']['option_id'], valueId: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValueData['path']['value_id'], query?: ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValueData['query']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValueResponse, ProductVariantOptionsV3ApiSpecs.GetProductVariantOptionValueError>>;
    updateProductVariantOptionValue(productId: ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionValueData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionValueData['path']['option_id'], valueId: ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionValueData['path']['value_id'], requestBody: ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionValueData['body']): Promise<import("../helpers/request/request-service.type").RequestResponse<ProductVariantOptionsV3ApiSpecs.UpdateProductVariantOptionValueResponse, unknown>>;
    deleteProductVariantOptionValue(productId: ProductVariantOptionsV3ApiSpecs.DeleteProductVariantOptionValueData['path']['product_id'], optionId: ProductVariantOptionsV3ApiSpecs.DeleteProductVariantOptionValueData['path']['option_id'], valueId: ProductVariantOptionsV3ApiSpecs.DeleteProductVariantOptionValueData['path']['value_id']): Promise<import("../helpers/request/request-service.type").RequestResponse<any, any>>;
}
